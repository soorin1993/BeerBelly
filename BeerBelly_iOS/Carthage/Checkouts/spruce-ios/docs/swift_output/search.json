{"Structs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code>interObjectDelay</code> values. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vV6Spruce22ContinuousSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code>interObjectDelay</code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual.","parent_name":"ContinuousSortFunction"},"Structs/ContinuousSortFunction.html#/s:vV6Spruce22ContinuousSortFunction8durationSd":{"name":"duration","abstract":"Undocumented","parent_name":"ContinuousSortFunction"},"Structs/ContinuousSortFunction.html#/s:vP6Spruce20PositionSortFunction8positionOS_8Position":{"name":"position","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vV6Spruce22ContinuousSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual.","parent_name":"ContinuousSortFunction"},"Structs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vV6Spruce22ContinuousSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual.","parent_name":"ContinuousSortFunction"},"Structs/ContinuousSortFunction.html#/s:FV6Spruce22ContinuousSortFunctioncFT8positionOS_8Position8durationSd_S0_":{"name":"init(position:duration:)","abstract":"Undocumented","parent_name":"ContinuousSortFunction"},"Structs/ContinuousSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vV6Spruce22ContinuousSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual.","parent_name":"ContinuousSortFunction"},"Structs/StandardAnimation.html#/s:vP6Spruce9Animation14changeFunctionGSqFCSo6UIViewT__":{"name":"changeFunction","abstract":"<p>A wrapper around the standard <code>UIViewAnimation</code> block with options publicly accessible. See, <a href=\"apple-reference-documentation://hsLqXZ_dD1\">UIViewAnimation</a> for more","parent_name":"StandardAnimation"},"Structs/StandardAnimation.html#/s:vV6Spruce17StandardAnimation8durationSd":{"name":"duration","abstract":"Undocumented","parent_name":"StandardAnimation"},"Structs/StandardAnimation.html#/s:vV6Spruce17StandardAnimation16animationOptionsVSC22UIViewAnimationOptions":{"name":"animationOptions","abstract":"Undocumented","parent_name":"StandardAnimation"},"Structs/StandardAnimation.html#/s:FV6Spruce17StandardAnimationcFT8durationSd_S0_":{"name":"init(duration:)","abstract":"Undocumented","parent_name":"StandardAnimation"},"Structs/StandardAnimation.html#/s:FV6Spruce17StandardAnimationcFT8durationSd7changesFCSo6UIViewT__S0_":{"name":"init(duration:changes:)","abstract":"Undocumented","parent_name":"StandardAnimation"},"Structs/StandardAnimation.html#/s:FP6Spruce9Animation7animateFT5delaySd4viewCSo6UIView10completionGSqFSbT___T_":{"name":"animate(delay:view:completion:)","abstract":"<p>A wrapper around the standard <code>UIViewAnimation</code> block with options publicly accessible. See, <a href=\"apple-reference-documentation://hsLqXZ_dD1\">UIViewAnimation</a> for more","parent_name":"StandardAnimation"},"Structs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code>interObjectDelay</code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code>interObjectDelay</code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20PositionSortFunction8positionOS_8Position":{"name":"position","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd":{"name":"duration","abstract":"Undocumented","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:vP6Spruce18WeightSortFunction16horizontalWeightOS_6Weight":{"name":"horizontalWeight","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:vP6Spruce18WeightSortFunction14verticalWeightOS_6Weight":{"name":"verticalWeight","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:FV6Spruce30ContinuousWeightedSortFunctioncFT8positionOS_8Position8durationSd16horizontalWeightOS_6Weight14verticalWeightS2__S0_":{"name":"init(position:duration:horizontalWeight:verticalWeight:)","abstract":"Undocumented","parent_name":"ContinuousWeightedSortFunction"},"Structs/ContinuousWeightedSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vV6Spruce30ContinuousWeightedSortFunction8durationSd\">duration</a></code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ContinuousWeightedSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd\">interObjectDelay</a></code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate.","parent_name":"ContinuousWeightedSortFunction"},"Structs/InlineSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that animates the views in as if they were reading text from left to right (based on the corner that you set).","parent_name":"InlineSortFunction"},"Structs/InlineSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that animates the views in as if they were reading text from left to right (based on the corner that you set).","parent_name":"InlineSortFunction"},"Structs/InlineSortFunction.html#/s:vP6Spruce18CornerSortFunction6cornerOS_6Corner":{"name":"corner","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that animates the views in as if they were reading text from left to right (based on the corner that you set).","parent_name":"InlineSortFunction"},"Structs/InlineSortFunction.html#/s:FV6Spruce18InlineSortFunctioncFT6cornerOS_6Corner16interObjectDelaySd_S0_":{"name":"init(corner:interObjectDelay:)","abstract":"Undocumented","parent_name":"InlineSortFunction"},"Structs/InlineSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that animates the views in as if they were reading text from left to right (based on the corner that you set).","parent_name":"InlineSortFunction"},"Structs/LinearSortFunction.html#/s:vP6Spruce21DirectionSortFunction9directionOS_9Direction":{"name":"direction","abstract":"<p>A <code>Linear</code> wiping <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. This will consider the rows or columns of the views rather than looking at their exact coordinates. Views that have the same vertical or horizontal components, based on the <code>direction</code>, will animate in at the same time.</p>","parent_name":"LinearSortFunction"},"Structs/LinearSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code>Linear</code> wiping <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. This will consider the rows or columns of the views rather than looking at their exact coordinates. Views that have the same vertical or horizontal components, based on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LinearSortFunction.html#/s:vP6Spruce21DirectionSortFunction9directionOS_9Direction\">direction</a></code>, will animate in at the same time.</p>","parent_name":"LinearSortFunction"},"Structs/LinearSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code>Linear</code> wiping <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. This will consider the rows or columns of the views rather than looking at their exact coordinates. Views that have the same vertical or horizontal components, based on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LinearSortFunction.html#/s:vP6Spruce21DirectionSortFunction9directionOS_9Direction\">direction</a></code>, will animate in at the same time.</p>","parent_name":"LinearSortFunction"},"Structs/LinearSortFunction.html#/s:FV6Spruce18LinearSortFunctioncFT9directionOS_9Direction16interObjectDelaySd_S0_":{"name":"init(direction:interObjectDelay:)","abstract":"Undocumented","parent_name":"LinearSortFunction"},"Structs/LinearSortFunction.html#/s:FP6Spruce20DistanceSortFunction15distanceBetweenFTVSC7CGPoint3andS1__Sd":{"name":"distanceBetween(_:and:)","abstract":"<p>A <code>Linear</code> wiping <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. This will consider the rows or columns of the views rather than looking at their exact coordinates. Views that have the same vertical or horizontal components, based on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/LinearSortFunction.html#/s:vP6Spruce21DirectionSortFunction9directionOS_9Direction\">direction</a></code>, will animate in at the same time.</p>","parent_name":"LinearSortFunction"},"Structs/SpruceUIView.html#/s:vP6Spruce4View4viewXwGSqCSo6UIView_":{"name":"view","abstract":"<p>The adjusted for reference point.</p>","parent_name":"SpruceUIView"},"Structs/SpruceUIView.html#/s:vP6Spruce4View14referencePointVSC7CGPoint":{"name":"referencePoint","abstract":"<p>The adjusted for reference point.</p>","parent_name":"SpruceUIView"},"Structs/SpruceUIView.html#/s:FV6Spruce12SpruceUIViewcFT4viewCSo6UIView14referencePointVSC7CGPoint_S0_":{"name":"init(view:referencePoint:)","abstract":"Undocumented","parent_name":"SpruceUIView"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7prepareFT18withRecursiveDepthSi14changeFunctionFCSo6UIViewT__T_":{"name":"prepare(withRecursiveDepth:changeFunction:)","abstract":"<p>Use this method to setup all of your views before the animation occurs. This could include hiding, fading, translating them, etc&hellip; </p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7animateFT16withSortFunctionPS_12SortFunction_7prepareGSqFCSo6UIViewT__9animationPS_9Animation_7excludeGSqGSaS2___14recursiveDepthSi10completionGSqFSbT___T_":{"name":"animate(withSortFunction:prepare:animation:exclude:recursiveDepth:completion:)","abstract":"<p>Run a spruce style animation on this view. This is a customized method that allows you to take more control over how the animation progresses.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7animateFTGSaOS_14StockAnimation_8durationSd10completionGSqFSbT___T_":{"name":"animate(_:duration:completion:)","abstract":"<p>Run a spruce style animation on this view. This method is the most basic form of a spruce animation and allows you to setup your view with stock spruce animations. Feel free to chain together animations that would work nicely together.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7animateFTGSaOS_14StockAnimation_12sortFunctionPS_12SortFunction_8durationSd10completionGSqFSbT___T_":{"name":"animate(_:sortFunction:duration:completion:)","abstract":"<p>Run a spruce style animation on this view. This allows you to setup your view with stock spruce animations. Feel free to chain together animations that would work nicely together.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7animateFTGSaOS_14StockAnimation_8durationSd13animationTypePS_9Animation_10completionGSqFSbT___T_":{"name":"animate(_:duration:animationType:completion:)","abstract":"<p>Run a spruce style animation on this view. This method allows you to setup your view with stock spruce animations. Feel free to chain together animations that would work nicely together.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7animateFTGSaOS_14StockAnimation_8durationSd13animationTypePS_9Animation_12sortFunctionPS_12SortFunction_7prepareSb10completionGSqFSbT___T_":{"name":"animate(_:duration:animationType:sortFunction:prepare:completion:)","abstract":"<p>Run a spruce style animation on this view. This method allows you to setup your view with stock spruce animations. Feel free to chain together animations that would work nicely together.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce7prepareFT4withGSaOS_14StockAnimation_14recursiveDepthSi_T_":{"name":"prepare(with:recursiveDepth:)","abstract":"<p>Use this method to setup all of your views before the animation occurs. This could include hiding, fading, translating them, etc&hellip;","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce15hideAllSubviewsFT14recursiveDepthSi_T_":{"name":"hideAllSubviews(recursiveDepth:)","abstract":"<p>Quick method to hide all of the subviews of a view. Use this if you want to make sure that none of the views that will be animated will be shown on screen before you transition them.</p>","parent_name":"Spruce"},"Structs/Spruce.html#/s:FV6Spruce6Spruce8subviewsFT18withRecursiveDepthSi_GSaPS_4View__":{"name":"subviews(withRecursiveDepth:)","abstract":"<p>The receiver&rsquo;s immediate subviews given the recursive depth. If a subview contains other subviews, they will be listed in the array following their parent view. Consider the following example:","parent_name":"Spruce"},"Structs/RadialSortFunction.html#/s:vP6Spruce20PositionSortFunction8positionOS_8Position":{"name":"position","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will offset the views in a circular fashion. This means that rather than looking flat like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CorneredSortFunction.html\">CorneredSortFunction</a></code>, there will be a curve going out of the position as if the views were in an expanding circle.</p>","parent_name":"RadialSortFunction"},"Structs/RadialSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will offset the views in a circular fashion. This means that rather than looking flat like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CorneredSortFunction.html\">CorneredSortFunction</a></code>, there will be a curve going out of the position as if the views were in an expanding circle.</p>","parent_name":"RadialSortFunction"},"Structs/RadialSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will offset the views in a circular fashion. This means that rather than looking flat like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CorneredSortFunction.html\">CorneredSortFunction</a></code>, there will be a curve going out of the position as if the views were in an expanding circle.</p>","parent_name":"RadialSortFunction"},"Structs/RadialSortFunction.html#/s:FV6Spruce18RadialSortFunctioncFT8positionOS_8Position16interObjectDelaySd_S0_":{"name":"init(position:interObjectDelay:)","abstract":"Undocumented","parent_name":"RadialSortFunction"},"Structs/SpringAnimation.html#/s:vP6Spruce9Animation14changeFunctionGSqFCSo6UIViewT__":{"name":"changeFunction","abstract":"<p>A wrapper around the spring <code>UIViewAnimation</code> block with options publicly accessible. See, <a href=\"apple-reference-documentation://hsEaMPVO1d\">UIViewAnimation</a> for more","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:vV6Spruce15SpringAnimation8durationSd":{"name":"duration","abstract":"Undocumented","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:vV6Spruce15SpringAnimation16animationOptionsVSC22UIViewAnimationOptions":{"name":"animationOptions","abstract":"<p>A mask of options indicating how you want to perform the animations</p>","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:vV6Spruce15SpringAnimation7dampingV12CoreGraphics7CGFloat":{"name":"damping","abstract":"Undocumented","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:vV6Spruce15SpringAnimation15initialVelocityV12CoreGraphics7CGFloat":{"name":"initialVelocity","abstract":"Undocumented","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:FV6Spruce15SpringAnimationcFT8durationSd_S0_":{"name":"init(duration:)","abstract":"Undocumented","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:FV6Spruce15SpringAnimationcFT8durationSd7changesFCSo6UIViewT__S0_":{"name":"init(duration:changes:)","abstract":"Undocumented","parent_name":"SpringAnimation"},"Structs/SpringAnimation.html#/s:FP6Spruce9Animation7animateFT5delaySd4viewCSo6UIView10completionGSqFSbT___T_":{"name":"animate(delay:view:completion:)","abstract":"<p>A mask of options indicating how you want to perform the animations</p>","parent_name":"SpringAnimation"},"Structs/SprucePoint.html#/s:FV6Spruce11SprucePoint17euclideanDistanceFT2toVSC7CGPoint_Sd":{"name":"euclideanDistance(to:)","abstract":"<p>Calculate the euclidean distance between two points</p>","parent_name":"SprucePoint"},"Structs/SprucePoint.html#/s:FV6Spruce11SprucePoint18horizontalDistanceFT2toVSC7CGPoint_Sd":{"name":"horizontalDistance(to:)","abstract":"<p>Calculate the horizontal euclidean distance between two points. Esentially the same thing as euclideanDistance except it ignores the <code>y</code> components of the two points.</p>","parent_name":"SprucePoint"},"Structs/SprucePoint.html#/s:FV6Spruce11SprucePoint16verticalDistanceFT2toVSC7CGPoint_Sd":{"name":"verticalDistance(to:)","abstract":"<p>Calculate the vertical euclidean distance between two points. Esentially the same thing as euclideanDistance except it ignores the <code>x</code> components of the two points.</p>","parent_name":"SprucePoint"},"Structs/RandomSortFunction.html#/s:vV6Spruce18RandomSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"Undocumented","parent_name":"RandomSortFunction"},"Structs/RandomSortFunction.html#/s:FV6Spruce18RandomSortFunctioncFT16interObjectDelaySd_S0_":{"name":"init(interObjectDelay:)","abstract":"Undocumented","parent_name":"RandomSortFunction"},"Structs/RandomSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will animate all the views in with a random delay. No 2 views will animate in with the same offset. The views will be placed in an array, shuffled, and then each view will be asigned an offset given the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/RandomSortFunction.html#/s:vV6Spruce18RandomSortFunction16interObjectDelaySd\">interObjectDelay</a></code>.</p>","parent_name":"RandomSortFunction"},"Structs/DefaultSortFunction.html#/s:vV6Spruce19DefaultSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"Undocumented","parent_name":"DefaultSortFunction"},"Structs/DefaultSortFunction.html#/s:FV6Spruce19DefaultSortFunctioncFT_S0_":{"name":"init()","abstract":"Undocumented","parent_name":"DefaultSortFunction"},"Structs/DefaultSortFunction.html#/s:FV6Spruce19DefaultSortFunctioncFT16interObjectDelaySd_S0_":{"name":"init(interObjectDelay:)","abstract":"Undocumented","parent_name":"DefaultSortFunction"},"Structs/DefaultSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>The basic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. Use this sort function if you want to animate in all views at the same time and give an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/DefaultSortFunction.html#/s:vV6Spruce19DefaultSortFunction16interObjectDelaySd\">interObjectDelay</a></code> of <code>0.0</code>. Note that this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will animate the views based on the order they were added to the animation view. This means that the way the views are sorted in the <code>subviews</code> array is the way that they will be sorted by this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>.</p>","parent_name":"DefaultSortFunction"},"Structs/CorneredSortFunction.html#/s:vP6Spruce18CornerSortFunction6cornerOS_6Corner":{"name":"corner","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html#/s:FV6Spruce20CorneredSortFunctioncFT6cornerOS_6Corner16interObjectDelaySd_S0_":{"name":"init(corner:interObjectDelay:)","abstract":"Undocumented","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html#/s:FP6Spruce20DistanceSortFunction13distancePointFT4viewCSo6UIView8subviewsGSaPS_4View___VSC7CGPoint":{"name":"distancePoint(view:subviews:)","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>","parent_name":"CorneredSortFunction"},"Structs/CorneredSortFunction.html":{"name":"CorneredSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> designed to animate in a corner like fashion. The views near the starting corner will animate first. In essence it appears to be a wiping function that will continue diagonally based on that corner.</p>"},"Structs/DefaultSortFunction.html":{"name":"DefaultSortFunction","abstract":"<p>The basic <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. Use this sort function if you want to animate in all views at the same time and give an <code>interObjectDelay</code> of <code>0.0</code>. Note that this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will animate the views based on the order they were added to the animation view. This means that the way the views are sorted in the <code>subviews</code> array is the way that they will be sorted by this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>.</p>"},"Structs/RandomSortFunction.html":{"name":"RandomSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will animate all the views in with a random delay. No 2 views will animate in with the same offset. The views will be placed in an array, shuffled, and then each view will be asigned an offset given the <code>interObjectDelay</code>.</p>"},"Structs/SprucePoint.html":{"name":"SprucePoint","abstract":"<p>Internal struct to access CGPoint extensions. Use this to call methods such as <code>.euclideanDistance</code></p>"},"Structs.html#/s:V6Spruce9TimedView":{"name":"TimedView","abstract":"<p>An internal struct that is used to relate a view with a time offset. This is used to determine when each view is set to animate.</p>"},"Structs/SpringAnimation.html":{"name":"SpringAnimation","abstract":"<p>A wrapper around the spring <code>UIViewAnimation</code> block with options publicly accessible. See, <a href=\"apple-reference-documentation://hsEaMPVO1d\">UIViewAnimation</a> for more"},"Structs/RadialSortFunction.html":{"name":"RadialSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that will offset the views in a circular fashion. This means that rather than looking flat like the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CorneredSortFunction.html\">CorneredSortFunction</a></code>, there will be a curve going out of the position as if the views were in an expanding circle.</p>"},"Structs/Spruce.html":{"name":"Spruce","abstract":"<p>Access to all of the Spruce library animations. Use this to call functions such as <code>.animate</code> or <code>.prepare</code></p>"},"Structs/SpruceUIView.html":{"name":"SpruceUIView","abstract":"Undocumented"},"Structs/LinearSortFunction.html":{"name":"LinearSortFunction","abstract":"<p>A <code>Linear</code> wiping <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. This will consider the rows or columns of the views rather than looking at their exact coordinates. Views that have the same vertical or horizontal components, based on the <code>direction</code>, will animate in at the same time.</p>"},"Structs/InlineSortFunction.html":{"name":"InlineSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that animates the views in as if they were reading text from left to right (based on the corner that you set)."},"Structs/ContinuousWeightedSortFunction.html":{"name":"ContinuousWeightedSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code>interObjectDelay</code> values using weights to structure when views should animate. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousWeightedSortFunction</code> you specify a <code>duration</code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code>interObjectDelay</code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual. The lighter the weight the faster the views will animate."},"Structs/StandardAnimation.html":{"name":"StandardAnimation","abstract":"<p>A wrapper around the standard <code>UIViewAnimation</code> block with options publicly accessible. See, <a href=\"apple-reference-documentation://hsLqXZ_dD1\">UIViewAnimation</a> for more"},"Structs/ContinuousSortFunction.html":{"name":"ContinuousSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that has variable <code>interObjectDelay</code> values. Unlike other <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementations, for the <code>ContinuousSortFunction</code> you specify a <code>duration</code> and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> will compute the necessary <code>interObjectDelay</code> values for each of the subviews. This means that the offset times will not be multiples of the delay like usual."},"Protocols/CornerSortFunction.html#/s:vP6Spruce18CornerSortFunction6cornerOS_6Corner":{"name":"corner","abstract":"<p>The starting corner for the animation. Views will animate vertically and horizontally from this corner.</p>","parent_name":"CornerSortFunction"},"Protocols/CornerSortFunction.html#/s:FP6Spruce20DistanceSortFunction13distancePointFT4viewCSo6UIView8subviewsGSaPS_4View___VSC7CGPoint":{"name":"distancePoint(view:subviews:)","abstract":"<p>The starting corner for the animation. Views will animate vertically and horizontally from this corner.</p>","parent_name":"CornerSortFunction"},"Protocols/WeightSortFunction.html#/s:vP6Spruce18WeightSortFunction16horizontalWeightOS_6Weight":{"name":"horizontalWeight","abstract":"<p>the horizontal weight that should be applied to each of the distances between views</p>","parent_name":"WeightSortFunction"},"Protocols/WeightSortFunction.html#/s:vP6Spruce18WeightSortFunction14verticalWeightOS_6Weight":{"name":"verticalWeight","abstract":"<p>the vertical weight that should be applied to each of the distances between views</p>","parent_name":"WeightSortFunction"},"Protocols/PositionSortFunction.html#/s:vP6Spruce20PositionSortFunction8positionOS_8Position":{"name":"position","abstract":"<p>the starting position of the animation</p>","parent_name":"PositionSortFunction"},"Protocols/PositionSortFunction.html#/s:FP6Spruce20DistanceSortFunction13distancePointFT4viewCSo6UIView8subviewsGSaPS_4View___VSC7CGPoint":{"name":"distancePoint(view:subviews:)","abstract":"<p>the starting position of the animation</p>","parent_name":"PositionSortFunction"},"Protocols/Animation.html#/s:FP6Spruce9Animation7animateFT5delaySd4viewCSo6UIView10completionGSqFSbT___T_":{"name":"animate(delay:view:completion:)","abstract":"<p>Animate the given view using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Animation.html#/s:vP6Spruce9Animation14changeFunctionGSqFCSo6UIViewT__\">changeFunction</a></code>.</p>","parent_name":"Animation"},"Protocols/Animation.html#/s:vP6Spruce9Animation14changeFunctionGSqFCSo6UIViewT__":{"name":"changeFunction","abstract":"<p>Given a view, this closure will define the manipulations that will happen to that view</p>","parent_name":"Animation"},"Protocols/View.html#/s:vP6Spruce4View4viewXwGSqCSo6UIView_":{"name":"view","abstract":"<p>The view that should be animating</p>","parent_name":"View"},"Protocols/View.html#/s:vP6Spruce4View14referencePointVSC7CGPoint":{"name":"referencePoint","abstract":"<p>The adjusted for reference point.</p>","parent_name":"View"},"Protocols/SortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView_GSaVS_9TimedView_":{"name":"timeOffsets(view:)","abstract":"<p>Given a view, view sort the subviews in a way that matches the desired specification of the <code>SortFunction</code>. In an example case, if you wanted a radial sort function then this method would return an array of the subviews such that their time offets would be smaller near the center of the view and grow as they get further from the center point.","parent_name":"SortFunction"},"Protocols/SortFunction.html#/s:FP6Spruce12SortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>Given a view, view sort the subviews in a way that matches the desired specification of the <code>SortFunction</code>. In an example case, if you wanted a radial sort function then this method would return an array of the subviews such that their time offets would be smaller near the center of the view and grow as they get further from the center point.</p>","parent_name":"SortFunction"},"Protocols/DistanceSortFunction.html#/s:vP6Spruce20DistanceSortFunction16interObjectDelaySd":{"name":"interObjectDelay","abstract":"<p>the time interval of delay between each of the objects on the screen when animating</p>","parent_name":"DistanceSortFunction"},"Protocols/DistanceSortFunction.html#/s:vP6Spruce20DistanceSortFunction8reversedSb":{"name":"reversed","abstract":"<p>a bool value as to whether the animation should proceeed forwards or backwards</p>","parent_name":"DistanceSortFunction"},"Protocols/DistanceSortFunction.html#/s:FP6Spruce20DistanceSortFunction15distanceBetweenFTVSC7CGPoint3andS1__Sd":{"name":"distanceBetween(_:and:)","abstract":"<p>Compute the distance between two points. This can be any distance metric as long as you keep it consistent. For the default implementation, <code>euclideanDistance</code> is used.</p>","parent_name":"DistanceSortFunction"},"Protocols/DistanceSortFunction.html#/s:FP6Spruce20DistanceSortFunction13distancePointFT4viewCSo6UIView8subviewsGSaPS_4View___VSC7CGPoint":{"name":"distancePoint(view:subviews:)","abstract":"<p>With a <code>DistanceSortFunction</code> there has to be some main point that all the views are compared to. Since we understand that this point changes based on some value, you need to implement this method that will return a point for the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> configuration. The <code>timeOffsets</code> method will use this to grab a comparison point. From there the further the distance from the point the longer the delay for that view to start animating.</p>","parent_name":"DistanceSortFunction"},"Protocols/DistanceSortFunction.html#/s:FP6Spruce20DistanceSortFunction9translateFT13distancePointVSC7CGPoint12intoSubviewsGSaPS_4View___S1_":{"name":"translate(distancePoint:intoSubviews:)","abstract":"<p>Given a point, find the closest subview to that point and then return the reference point of that subview. This way there will be at least one distance calculation that will have a zero value. We want to make sure that the animation will start right when called, thus there needs to be one view with a zero distance.</p>","parent_name":"DistanceSortFunction"},"Protocols/DistanceSortFunction.html#/s:FE6SprucePS_20DistanceSortFunction11timeOffsetsFT4viewCSo6UIView14recursiveDepthSi_GSaVS_9TimedView_":{"name":"timeOffsets(view:recursiveDepth:)","abstract":"<p>Given a view, view sort the subviews in a way that matches the desired specification of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>. In an example case, if you wanted a radial sort function then this method would return an array of the subviews such that their time offets would be smaller near the center of the view and grow as they get further from the center point.","parent_name":"DistanceSortFunction"},"Protocols/DirectionSortFunction.html#/s:vP6Spruce21DirectionSortFunction9directionOS_9Direction":{"name":"direction","abstract":"<p>the direction that the animation should follow</p>","parent_name":"DirectionSortFunction"},"Protocols/DirectionSortFunction.html#/s:FP6Spruce20DistanceSortFunction13distancePointFT4viewCSo6UIView8subviewsGSaPS_4View___VSC7CGPoint":{"name":"distancePoint(view:subviews:)","abstract":"<p>the direction that the animation should follow</p>","parent_name":"DirectionSortFunction"},"Protocols/DirectionSortFunction.html":{"name":"DirectionSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DistanceSortFunction.html\">DistanceSortFunction</a></code> that defines it&rsquo;s <code>distancePoint</code> based on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Direction.html\">Direction</a></code>. Any distance based sort functions that use a direction variable in order to determine the setup of the animation should implement this protocol.</p>"},"Protocols/DistanceSortFunction.html":{"name":"DistanceSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> implementation that contain basic methods needed for doing distance comparisons. If you are implementing a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that considers distance to be one of it&rsquo;s weighting mechanisms for sorting the views on the screen, then implementing this protocol would provide improvements over the standard <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>.</p>"},"Protocols/SortFunction.html":{"name":"SortFunction","abstract":"<p>For all the views on the screen, we need to find some way of organizing them so that when we start the animation, each view will know when to start their individual animation. The concept of a <code>SortFunction</code> is just that. Given a view, the subviews of that view are sorted in a way that when animated they resemble the nature of that sort function. There are many different types of sort functions because there are so many ways to sort the subviews that are on the screen. If you don&rsquo;t see a stock one that fits your need, feel free to implement this protocol and use your own custom <code>SortFunction</code> with Spruce.</p>"},"Protocols/View.html":{"name":"View","abstract":"<p>Used to keep track of the <code>UIView</code> object and a changing reference point. Since Spruce allows for"},"Protocols/Animation.html":{"name":"Animation","abstract":"<p>An animation type that handles how the views will change. Most of these are simply wrappers around the standard <code>UIViewAnimation</code> methods. This gives <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Spruce.html\">Spruce</a></code> the flexibility to work with any style of animating.</p>"},"Protocols/PositionSortFunction.html":{"name":"PositionSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DistanceSortFunction.html\">DistanceSortFunction</a></code> that uses a position attribute to define an animation&rsquo;s starting point.</p>"},"Protocols/WeightSortFunction.html":{"name":"WeightSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code> that takes into account the vertical and horizontal weight of the position of views. The lighter the weight the the faster those views will start to animate. For example, if you had a light <code>verticalWeight</code> and a heavy <code>horizontalWeight</code>, the views that are vertically aligned with the starting position will animate before those that are horizontally aligned. This allows you to define the exact rigidness of a <code>radial</code> like <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortFunction.html\">SortFunction</a></code>.</p>"},"Protocols/CornerSortFunction.html":{"name":"CornerSortFunction","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DistanceSortFunction.html\">DistanceSortFunction</a></code> that uses a corner attribute to define an animation&rsquo;s starting point.</p>"},"Extensions/UIView.html#/s:vE6SpruceCSo6UIView6spruceVS_6Spruce":{"name":"spruce","abstract":"<p>Access to all of the Spruce library animations. Use this to call functions such as <code>.animate</code> or <code>.prepare</code></p>","parent_name":"UIView"},"Extensions/UIView.html#/s:vE6SpruceCSo6UIViewX4vhIhVS_6Spruce":{"name":"🌲","abstract":"<p>Access to all of the Spruce library animations. Use this to call functions such as <code>.animate</code> or <code>.prepare</code></p>","parent_name":"UIView"},"Extensions/CGPoint.html#/s:vE6SpruceVSC7CGPoint6spruceVS_11SprucePoint":{"name":"spruce","abstract":"<p>Access point extensions from Spruce. Call methods such as <code>.euclideanDistance</code>.</p>","parent_name":"CGPoint"},"Extensions/CGPoint.html#/s:vE6SpruceVSC7CGPointX4vhIhVS_11SprucePoint":{"name":"🌲","abstract":"Undocumented","parent_name":"CGPoint"},"Extensions/CGPoint.html":{"name":"CGPoint","abstract":"Undocumented"},"Extensions/UIView.html":{"name":"UIView","abstract":"Undocumented"},"Enums/Corner.html#/s:FO6Spruce6Corner7topLeftFMS0_S0_":{"name":"topLeft","abstract":"<p>top left corner of the view</p>","parent_name":"Corner"},"Enums/Corner.html#/s:FO6Spruce6Corner8topRightFMS0_S0_":{"name":"topRight","abstract":"<p>top right corner of the view</p>","parent_name":"Corner"},"Enums/Corner.html#/s:FO6Spruce6Corner10bottomLeftFMS0_S0_":{"name":"bottomLeft","abstract":"<p>bottom left corner of the view</p>","parent_name":"Corner"},"Enums/Corner.html#/s:FO6Spruce6Corner11bottomRightFMS0_S0_":{"name":"bottomRight","abstract":"<p>bottom right corner of the view</p>","parent_name":"Corner"},"Enums/Weight.html#/s:FO6Spruce6Weight5lightFMS0_S0_":{"name":"light","abstract":"<p>a small value, 0.5</p>","parent_name":"Weight"},"Enums/Weight.html#/s:FO6Spruce6Weight6mediumFMS0_S0_":{"name":"medium","abstract":"<p>a default value, 1.0</p>","parent_name":"Weight"},"Enums/Weight.html#/s:FO6Spruce6Weight5heavyFMS0_S0_":{"name":"heavy","abstract":"<p>a large value, 2.0</p>","parent_name":"Weight"},"Enums/Weight.html#/s:FO6Spruce6Weight6customFMS0_FSdS0_":{"name":"custom","abstract":"<p>you can specify your own value for weight</p>","parent_name":"Weight"},"Enums/Position.html#/s:FO6Spruce8Position7topLeftFMS0_S0_":{"name":"topLeft","abstract":"<p>the top left point of the view</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position9topMiddleFMS0_S0_":{"name":"topMiddle","abstract":"<p>the top center point of the view</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position8topRightFMS0_S0_":{"name":"topRight","abstract":"<p>the top right point of the view</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position4leftFMS0_S0_":{"name":"left","abstract":"<p>the left point of the view, centered vertically</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position6middleFMS0_S0_":{"name":"middle","abstract":"<p>the absolute center of the view (both horizontally and vertically)</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position5rightFMS0_S0_":{"name":"right","abstract":"<p>the right point of the view, centered vertically</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position10bottomLeftFMS0_S0_":{"name":"bottomLeft","abstract":"<p>the bottom left point of the view</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position12bottomMiddleFMS0_S0_":{"name":"bottomMiddle","abstract":"<p>the bottom center point of the view</p>","parent_name":"Position"},"Enums/Position.html#/s:FO6Spruce8Position11bottomRightFMS0_S0_":{"name":"bottomRight","abstract":"<p>the bottom right point of the view</p>","parent_name":"Position"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation5slideFMS0_FTOS_14SlideDirectionOS_8Distance_S0_":{"name":"slide","abstract":"<p>Have your view slide to where it currently is. Provide a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SlideDirection.html\">SlideDirection</a></code> and <code>Size</code> to determine what the animation should look like.</p>","parent_name":"StockAnimation"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation6fadeInFMS0_S0_":{"name":"fadeIn","abstract":"<p>Fade the view in</p>","parent_name":"StockAnimation"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation4spinFMS0_FOS_5AngleS0_":{"name":"spin","abstract":"<p>Spin the view in the direction of the size. Provide a <code>Size</code> to define how much the view should spin</p>","parent_name":"StockAnimation"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation6expandFMS0_FOS_5ScaleS0_":{"name":"expand","abstract":"<p>Have the view grow in size. Provide a <code>Size</code> to define by which scale the view should grow</p>","parent_name":"StockAnimation"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation8contractFMS0_FOS_5ScaleS0_":{"name":"contract","abstract":"<p>Have the view shrink in size. Provide a <code>Size</code> to define by which scale the view should shrink</p>","parent_name":"StockAnimation"},"Enums/StockAnimation.html#/s:FO6Spruce14StockAnimation6customFMS0_FT15prepareFunctionFCSo6UIViewT_15animateFunctionFS1_T__S0_":{"name":"custom","abstract":"<p>Provide custom prepare and change functions for the view to animate</p>","parent_name":"StockAnimation"},"Enums/Distance.html#/s:FO6Spruce8Distance8slightlyFMS0_S0_":{"name":"slightly","abstract":"<p>slightly move the object</p>","parent_name":"Distance"},"Enums/Distance.html#/s:FO6Spruce8Distance10moderatelyFMS0_S0_":{"name":"moderately","abstract":"<p>the object should move a moderate amount</p>","parent_name":"Distance"},"Enums/Distance.html#/s:FO6Spruce8Distance8severelyFMS0_S0_":{"name":"severely","abstract":"<p>the object should move very noticeably</p>","parent_name":"Distance"},"Enums/Distance.html#/s:FO6Spruce8Distance8byPointsFMS0_FV12CoreGraphics7CGFloatS0_":{"name":"byPoints","abstract":"<p>provide your own distance value that you feel the object should slide over</p>","parent_name":"Distance"},"Enums/Scale.html#/s:FO6Spruce5Scale8slightlyFMS0_S0_":{"name":"slightly","abstract":"<p>slightly animate the object</p>","parent_name":"Scale"},"Enums/Scale.html#/s:FO6Spruce5Scale10moderatelyFMS0_S0_":{"name":"moderately","abstract":"<p>the object should scale a moderate amount</p>","parent_name":"Scale"},"Enums/Scale.html#/s:FO6Spruce5Scale8severelyFMS0_S0_":{"name":"severely","abstract":"<p>the object should scale very noticeably</p>","parent_name":"Scale"},"Enums/Scale.html#/s:FO6Spruce5Scale7toScaleFMS0_FV12CoreGraphics7CGFloatS0_":{"name":"toScale","abstract":"<p>provide your own scale value that you feel the object should grow/shrink</p>","parent_name":"Scale"},"Enums/Angle.html#/s:FO6Spruce5Angle8slightlyFMS0_S0_":{"name":"slightly","abstract":"<p>slightly animate the object</p>","parent_name":"Angle"},"Enums/Angle.html#/s:FO6Spruce5Angle10moderatelyFMS0_S0_":{"name":"moderately","abstract":"<p>the object should move a moderate amount</p>","parent_name":"Angle"},"Enums/Angle.html#/s:FO6Spruce5Angle8severelyFMS0_S0_":{"name":"severely","abstract":"<p>the object should move very noticeably</p>","parent_name":"Angle"},"Enums/Angle.html#/s:FO6Spruce5Angle7toAngleFMS0_FV12CoreGraphics7CGFloatS0_":{"name":"toAngle","abstract":"<p>provide your own value that you feel the object should move. The value you should provide should be a <code>Double</code></p>","parent_name":"Angle"},"Enums/SlideDirection.html#/s:FO6Spruce14SlideDirection2upFMS0_S0_":{"name":"up","abstract":"<p>start the view below its current position, and then slide upwards to where it currently is</p>","parent_name":"SlideDirection"},"Enums/SlideDirection.html#/s:FO6Spruce14SlideDirection4downFMS0_S0_":{"name":"down","abstract":"<p>start the view above its current position, and then slide downwards to where it currently is</p>","parent_name":"SlideDirection"},"Enums/SlideDirection.html#/s:FO6Spruce14SlideDirection4leftFMS0_S0_":{"name":"left","abstract":"<p>start the view to the right of its current position, and then slide left to where it currently is</p>","parent_name":"SlideDirection"},"Enums/SlideDirection.html#/s:FO6Spruce14SlideDirection5rightFMS0_S0_":{"name":"right","abstract":"<p>start the view to the left of its current position, and then slide right to where it currently is</p>","parent_name":"SlideDirection"},"Enums/Direction.html#/s:FO6Spruce9Direction11topToBottomFMS0_S0_":{"name":"topToBottom","abstract":"<p>the animation will run with top views animating first and then bottom views animating last</p>","parent_name":"Direction"},"Enums/Direction.html#/s:FO6Spruce9Direction11bottomToTopFMS0_S0_":{"name":"bottomToTop","abstract":"<p>the animation will run with bottom views animating first and then top views animating last</p>","parent_name":"Direction"},"Enums/Direction.html#/s:FO6Spruce9Direction11leftToRightFMS0_S0_":{"name":"leftToRight","abstract":"<p>the animation will run with left views animating first and right views animating last</p>","parent_name":"Direction"},"Enums/Direction.html#/s:FO6Spruce9Direction11rightToLeftFMS0_S0_":{"name":"rightToLeft","abstract":"<p>the animation will run with right views animating first and left views animating last</p>","parent_name":"Direction"},"Enums/Direction.html":{"name":"Direction","abstract":"<p>A representation of a linear direction.</p>"},"Enums/SlideDirection.html":{"name":"SlideDirection","abstract":"<p>Direction that a slide animation should use.</p>"},"Enums/Angle.html":{"name":"Angle","abstract":"<p>How much the angle of an animation should change. This value changes based off of which type of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/StockAnimation.html\">StockAnimation</a></code> is used.</p>"},"Enums/Scale.html":{"name":"Scale","abstract":"<p>How much the scale of an animation should change. This value changes based off of which type of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/StockAnimation.html\">StockAnimation</a></code> is used.</p>"},"Enums/Distance.html":{"name":"Distance","abstract":"<p>How much the distance of a view animation should change. This value changes based off of which type of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/StockAnimation.html\">StockAnimation</a></code> is used.</p>"},"Enums/StockAnimation.html":{"name":"StockAnimation","abstract":"<p>A few stock animations that you can use with Spruce. We want to make it really easy for you to include animations so we tried to include the basics. Use these stock animations to <code>slide</code>, <code>fade</code>, <code>spin</code>, <code>expand</code>, or <code>contract</code> your views.</p>"},"Enums/Position.html":{"name":"Position","abstract":"<p>A position on the screen. Use this to define specific locations on the screen where the animation should start</p>"},"Enums/Weight.html":{"name":"Weight","abstract":"<p>Represents the weighted values for computation</p>"},"Enums/Corner.html":{"name":"Corner","abstract":"<p>A representation of the corners of the view</p>"},"Classes/ViewController.html#/s:vC6Spruce14ViewController10animationsGSaOS_14StockAnimation_":{"name":"animations","abstract":"<p>an array of spruce stock animations that will be used to animate all of the subviews of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ViewController.html#/s:vC6Spruce14ViewController13animationViewGSqCSo6UIView_\">animationView</a></code></p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:vC6Spruce14ViewController8durationSd":{"name":"duration","abstract":"<p>the length of each of the individual subview animations</p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:vC6Spruce14ViewController13animationTypePS_9Animation_":{"name":"animationType","abstract":"<p>the style of animation that will be apllied to each of the subviews</p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:vC6Spruce14ViewController12sortFunctionPS_12SortFunction_":{"name":"sortFunction","abstract":"<p>the sort function that should be used for choreographing the animations</p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:vC6Spruce14ViewController13animationViewGSqCSo6UIView_":{"name":"animationView","abstract":"<p>the view that Spruce should be called on. This means that the subviews of this view will animate in.</p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:FC6Spruce14ViewControllercFT5coderCSo7NSCoder_GSqS0__":{"name":"init(coder:)","abstract":"Undocumented","parent_name":"ViewController"},"Classes/ViewController.html#/s:FC6Spruce14ViewController11viewDidLoadFT_T_":{"name":"viewDidLoad()","abstract":"<p>in the <code>viewDidLoad</code> method all of the views are prepared for animation</p>","parent_name":"ViewController"},"Classes/ViewController.html#/s:FC6Spruce14ViewController13viewDidAppearFSbT_":{"name":"viewDidAppear(_:)","abstract":"<p>a simple overrided method that will call <code>spruce_up</code> on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ViewController.html#/s:vC6Spruce14ViewController13animationViewGSqCSo6UIView_\">animationView</a></code>. If the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ViewController.html#/s:vC6Spruce14ViewController13animationViewGSqCSo6UIView_\">animationView</a></code> is not set then nothing will happen. The code should silently fail.</p>","parent_name":"ViewController"},"Classes/Button.html#/s:vC6Spruce6Button9animationOS_14StockAnimation":{"name":"animation","abstract":"<p>the stock animation that should be applied to the button upon press</p>","parent_name":"Button"},"Classes/Button.html#/s:vC6Spruce6Button13animationTypePS_9Animation_":{"name":"animationType","abstract":"<p>the style of animation that should be used when animating the button</p>","parent_name":"Button"},"Classes/Button.html#/s:vC6Spruce6Button13isHighlightedSb":{"name":"isHighlighted","abstract":"Undocumented","parent_name":"Button"},"Classes/Button.html":{"name":"Button","abstract":"Undocumented"},"Classes/ViewController.html":{"name":"ViewController","abstract":"Undocumented"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Enums.html":{"name":"Enums","abstract":"The following enums are available globally."},"Extensions.html":{"name":"Extensions","abstract":"The following extensions are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}